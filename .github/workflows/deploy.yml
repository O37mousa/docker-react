name: Deploy our Microservices application_name
on: 
  push: 
    branches: 
      - master
jobs:
  build: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker build -t omousa37/react-test -f Dockerfile.dev .
      - run: docker run -e CI=true omousa37/react-test npm run test

      - run: docker build -t omousa37/multi-client ./client
      - run: docker build -t omousa37/multi-nginx ./nginx
      - run: docker build -t omousa37/multi-server ./server
      - run: docker build -t omousa37/multi-worker ./worker

      - run: docker push omousa37/multi-client
      - run: docker push omousa37/multi-nginx 
      - run: docker push omousa37/multi-server
      - run: docker push omousa37/multi-worker



# name: deploy react 

# on: 
#   push:
#     branches: 
#       - master

# jobs:
#   build: 
#     runs-on: ubuntu-latest
#     steps: 
#       - uses: actions/checkout@v2
#       - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#       - run: docker build -t ahmedgamil/react-test -f Dockerfile.dev .
#       - run: docker run -e CI=true ahmedgamil/react-test npm run test

  
#       - name: create deployment package 
#         run : zip -r deploy.zip . -x '*.git*'

    # # creating deployment configurations for elastic beans
    #   - name: Deploy over the ElasticBeanstalk 
    #     uses: einaregilsson/beanstalk-deploy@v20
    #     with:  
    #      aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
    #      aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}

    #      application_name: "react-project"
    #      environment_name: "React-project-env"
    #      region: "us-east-1"
    #      version_label: ${{github.sha}}
    #      deployment_package: deploy.zip








        







        







      






